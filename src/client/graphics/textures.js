
function Textures() {  
  this.height = 16;
  this.width = 16;
  this.data = {
    grass_top: [[0,1,1,2,1,1,3,1,2,1,2,1,1,2,1,2,1,2,0,1,3,0,2,1,0,1,1,0,0,1,3,1,1,1,1,2,1,2,1,1,3,2,1,2,2,1,1,0,0,2,0,1,1,1,0,0,1,1,0,2,1,3,3,1,1,1,1,3,3,1,0,2,1,2,2,1,0,1,3,3,2,1,1,0,1,0,3,1,2,1,2,1,2,1,1,1,1,0,2,1,1,2,3,1,0,3,0,1,3,1,3,1,0,2,3,0,2,1,1,2,1,2,1,2,1,2,1,0,1,3,1,1,1,3,1,0,2,1,1,0,1,3,0,1,1,3,1,2,1,1,2,1,1,3,0,1,2,0,1,0,1,0,3,1,2,0,1,3,2,1,2,2,1,1,1,1,2,1,1,1,2,3,2,0,1,0,2,1,0,2,3,2,1,1,2,0,1,2,1,0,2,1,2,3,2,1,2,1,1,3,1,3,1,0,1,2,1,2,1,1,3,0,2,1,0,2,1,1,2,2,1,0,2,1,3,1,1,2,1,1,1,1,2,0,1,1,2,1,2,0,3,1,0,1,1,3],[[54,86,41,255],[63,103,46,255],[72,118,53,255],[83,135,62,255]]],
    grass_side: [[0,1,1,2,1,1,0,3,1,1,0,1,0,1,1,2,0,3,1,1,0,3,1,2,1,2,0,0,1,2,0,1,0,2,0,2,0,2,4,1,0,3,0,2,1,3,0,2,1,2,0,3,4,2,4,2,0,4,1,2,1,2,1,2,1,4,0,2,4,4,4,2,0,4,1,3,4,4,1,4,4,5,4,4,4,5,4,4,1,4,4,4,4,5,4,4,6,6,5,5,5,7,6,4,4,5,6,6,8,5,5,8,8,6,6,5,6,6,6,5,5,8,8,8,5,5,4,4,5,5,4,4,6,6,6,7,5,5,4,4,5,6,7,4,5,6,7,4,5,8,6,6,6,6,4,5,6,6,7,5,8,6,6,6,5,8,8,6,6,8,5,8,8,6,6,5,8,8,6,6,4,5,8,8,5,5,4,4,8,8,5,5,5,6,6,8,4,4,5,5,5,8,8,4,4,4,5,6,5,6,6,4,4,4,5,7,4,4,8,4,4,5,5,4,5,5,4,4,6,4,8,6,7,4,5,5,6,6,7,4,5,8,6,4,5,5,6,6,6,5,5,8,6,6,6,5],[[54,86,41,255],[63,103,46,255],[72,118,53,255],[83,135,62,255],[74,55,43,255],[81,61,47,255],[117,87,68,255],[138,102,79,255],[106,79,61,255]]],
    dirt: [[0,1,2,3,3,4,0,0,0,3,4,0,0,0,0,3,3,2,2,4,3,3,4,0,0,3,2,4,4,2,2,3,3,4,0,0,1,3,4,4,3,2,2,2,2,2,1,3,3,4,0,0,0,3,3,3,3,4,1,2,2,4,0,0,3,4,0,0,4,3,4,3,4,0,0,0,3,4,0,0,3,3,4,4,2,2,3,3,4,0,0,1,0,3,4,0,0,3,2,2,2,1,0,3,4,0,0,0,4,3,3,4,4,2,2,2,0,0,0,2,2,4,4,4,3,3,2,2,3,3,2,3,0,0,0,1,2,2,3,3,3,0,1,2,3,0,1,3,3,4,0,0,0,0,3,3,0,0,1,3,4,0,0,0,3,4,4,0,0,4,3,4,4,0,0,3,4,4,0,0,2,3,4,4,3,3,2,2,4,4,3,3,3,0,0,4,2,2,3,3,3,4,4,2,2,2,3,0,3,0,0,2,2,2,3,1,2,2,4,2,2,3,3,2,3,3,2,2,0,2,4,0,1,2,3,3,0,0,1,2,3,4,0,2,3,3,0,0,0,3,3,4,0,0,0,3],[[117,87,68,255],[138,102,79,255],[74,55,43,255],[81,61,47,255],[106,79,61,255]]],
    stone: [[0,0,1,2,3,0,0,0,1,1,1,0,1,3,0,0,2,0,2,2,2,2,0,1,2,2,2,3,1,0,0,3,4,0,1,4,2,1,1,4,4,4,2,1,0,0,2,2,0,0,1,1,1,1,1,1,1,4,1,1,3,0,1,4,1,1,3,3,1,2,2,3,1,1,1,2,2,3,1,1,1,2,2,2,0,4,2,2,2,3,1,4,4,2,2,1,0,4,4,2,0,0,4,4,4,1,0,4,4,4,1,1,0,0,4,1,0,0,1,1,1,1,0,0,0,0,1,3,2,0,1,1,3,3,1,0,0,2,3,0,0,2,2,2,4,1,1,2,2,2,2,0,4,2,2,3,1,4,2,2,1,1,4,4,4,4,2,0,4,4,4,1,1,4,4,0,1,1,0,0,4,0,1,1,4,1,1,0,0,0,1,1,1,2,3,0,1,1,3,1,1,1,4,0,2,0,0,1,4,4,2,1,1,2,2,2,3,1,0,0,2,3,1,1,5,4,1,1,0,0,4,2,2,2,1,4,4,2,2,0,5,5,2,2,3,0,0,4,4,1,1,1,4,4,4,0],[[56,56,56,255],[62,62,62,255],[105,97,90,255],[120,110,102,255],[90,90,90,255],[57,57,57,255]]]
  };
  this.textureIDs = [];
  this.textureKeys = {};
  this.textureKeyCount = 0;
  
  this.pixels = [];
};

Textures.prototype.load = function(texture) {
  let d = this.data[texture],
      pixels = d[0],
      colors = d[1];
  if (!d) return;
  this.textureIDs.push(texture);
  this.textureKeys[texture] = this.textureKeyCount ++;
  for (let i = 0; i < pixels.length; i ++) {
    this.pixels.push(...colors[pixels[i]]);
  }
};

Textures.prototype.loadAll = function() {
  for (let d in this.data) {
    this.load(d);
  }
};

Textures.prototype.createTextureArray = function(gl) {
  const texture = gl.createTexture();
  gl.bindTexture(gl.TEXTURE_2D_ARRAY, texture);
  gl.texImage3D(gl.TEXTURE_2D_ARRAY, 0, gl.RGBA, this.width, this.height, this.pixels.length / 256 / 4, 0, gl.RGBA, gl.UNSIGNED_BYTE, new Uint8Array(this.pixels));
  gl.generateMipmap(gl.TEXTURE_2D_ARRAY);
  
  gl.texParameteri(gl.TEXTURE_2D_ARRAY, gl.TEXTURE_MAG_FILTER, gl.NEAREST);
  gl.texParameteri(gl.TEXTURE_2D_ARRAY, gl.TEXTURE_MIN_FILTER, gl.NEAREST_MIPMAP_LINEAR);
  return texture;
};